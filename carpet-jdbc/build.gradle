plugins {
    id 'java'
    id 'java-library'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation project(':carpet-record')
    testImplementation "org.mongodb:bson:5.4.0"
    testImplementation "org.duckdb:duckdb_jdbc:1.1.3"
    testImplementation "org.postgresql:postgresql:42.7.3"
    testImplementation "com.mysql:mysql-connector-j:8.0.33"
    testImplementation "org.xerial:sqlite-jdbc:3.45.1.0"
    testImplementation "org.testcontainers:junit-jupiter:1.19.7"
    testImplementation "org.testcontainers:postgresql:1.19.7"
    testImplementation "org.testcontainers:mysql:1.19.7"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatformLauncherVersion}"
}

test {
    useJUnitPlatform()

    // Disable test result caching for development
    // outputs.upToDateWhen { false }

    // Show test results and container output in console
    testLogging {
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat = "full"
        showExceptions = true
        showCauses = true
        showStackTraces = true
        showStandardStreams = true

        // Show individual test progress
        afterTest { desc, result ->
            println "✅ Test ${desc.name}: ${result.resultType}"
        }
    }

    // Show summary after all tests
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\n" + "="*60
            println "🧪 TEST RESULTS SUMMARY"
            println "="*60
            println "📊 Tests run: ${result.testCount}"
            println "✅ Passed: ${result.successfulTestCount}"
            println "❌ Failed: ${result.failedTestCount}"
            println "⏭️  Skipped: ${result.skippedTestCount}"
            println "🎯 Result: ${result.resultType}"
            println "="*60
        }
    }
}

// Make jar task depend on sourcesJar
jar {
    dependsOn sourcesJar
}
